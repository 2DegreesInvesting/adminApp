devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?shiny::br
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
run_app()
devtools::load_all(".")
run_app()
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sliderInput("obs", "Number of observations", 0, 1000, 500),
actionButton("goButton", "Go!", class = "btn-success"),
plotOutput("distPlot")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
# Take a dependency on input$goButton. This will run once initially,
# because the value changes from NULL to 0.
input$goButton
# Use isolate() to avoid dependency on input$obs
dist <- isolate(rnorm(input$obs))
hist(dist)
})
}
shinyApp(ui, server)
}
## Example of adding extra class values
actionButton("largeButton", "Large Primary Button", class = "btn-primary btn-lg")
actionLink("infoLink", "Information Link", class = "btn-info")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
lubridate::as_date("2021-05-28")
lubridate::as_date(c("2021-05-28", "2021-06-26"))
diff(lubridate::as_date(c("2021-05-28", "2021-06-26")))
diff(lubridate::as_date(c("2021-05-28", "2021-06-27")))
weekdays(diff(lubridate::as_date(c("2021-05-28", "2021-06-27"))))
days <- lubridate::as_date(c("2021-05-28", "2021-06-27")
days
dates <- lubridate::as_date(c("2021-05-28", "2021-06-27"))
dates
lubridate::wday(dates)
seq(dates)
seq(dates)
first <- lubridate::as_date("2021-05-28")
last <- lubridate::as_date("2021-05-28")
lubridate::wday(dates)
seq(first, last)
seq(first, last, 1)
days <- seq(first, last, "days")
days
weekdays(days)
!weekdays(days)
days <- seq(first, last, "days")
first <- as.Date("2021-05-28")
last <- as.Date("2021-05-28")
days <- seq(first, last, "days")
days
sum(!weekdays(days) %in% c("Saturday", "Sunday"))
startDate <- dmy("21-May-2015")
endDate <- dmy("19-Aug-2015")
library(lubridate)
startDate <- dmy("21-May-2015")
endDate <- dmy("19-Aug-2015")
myDates <-seq(from = startDate, to = endDate, by = "days")
length(which(wday(myDates)==2))
startDate
endDate
myDates
seq(from = startDate, to = endDate, by = "weeks")
startDate <- dmy("21-May-2015")
endDate <- dmy("19-Aug-2015")
myDates <-seq(from = startDate, to = endDate, by = "days")
startDate
endDate
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
days <- seq(first, last, "days")
sum(!weekdays(days) %in% c("Saturday", "Sunday"))
daily_rate <- $410
daily_rate <- 410
daily_rate <- 410
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
days <- seq(first, last, "days")
sum(!weekdays(days) %in% c("Saturday", "Sunday"))
n * daily_rate
daily_rate <- 410
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
days <- seq(first, last, "days")
n <- sum(!weekdays(days) %in% c("Saturday", "Sunday"))
n * daily_rate
daily_rate <- 410
daily_rate <- 410
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
days <- seq(first, last, "days")
days
dates <- seq(first, last, "days")
weekdates <- !weekdays(dates) %in% c("Saturday", "Sunday")
weekdates
is_wday <- !weekdays(dates) %in% c("Saturday", "Sunday")
is_wday
sum(is_wday)
n <- sum(is_wday)
total_amount <- amount_of_days * price_per_day
price_per_day <- 410
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
dates <- seq(first, last, "days")
is_wday <- !weekdays(dates) %in% c("Saturday", "Sunday")
amount_of_days <- sum(is_wday)
total_amount <- amount_of_days * price_per_day
total_amount
library(lubridate)
startDate <- dmy("2021-05-28")
endDate <- dmy("2021-06-27")
myDates <-seq(from = startDate, to = endDate, by = "days")
myDates
length(which(wday(myDates)==2))
wday(myDates)
wday(myDates) %in% c(1, 2)
wday(myDates, label = TRUE)
wday(myDates, label = TRUE) %in% 2:6
wday
lubridate::wday()
?lubridate::wday()
wday(today())
wday(today(), label = TRUE)
wday(today()-5, label = TRUE)
wday(today()-4, label = TRUE)
wday(today()-4)
wday(myDates, label = TRUE) %in% 2:6
mon_fri <- 2:6
wday(myDates, label = TRUE) %in% mon_fri
wday(myDates, label = TRUE, week_start = "Sunday") %in% mon_fri
mon_fri <- 2:6
wday(myDates, label = TRUE, week_start = "Sunday") %in% mon_fri
getOption("lubridate.week.start")
sunday <- 1L
wday(myDates, label = TRUE, week_start = sunday) %in% mon_fri
wday(today()-4, label = TRUE, week_start = 1)
wday(today(), label = TRUE, week_start = 1)
wday(today(), label = TRUE, week_start = 2)
wday(today(), week_start = 2)
wday(today(), week_start = 1)
sunday_iso <- 1L
mon_fri <- 2:6
sun_iso <- 1L
mon_fri <- 2:6
sun_iso <- 1L
mon_fri <- 2L:6L
wday(myDates, label = TRUE, week_start = sunday_iso) %in% mon_fri
is_wday <- wday(myDates, label = TRUE, week_start = sunday_iso) %in% mon_fri
is_wday
sum(is_wday)
sum(is_wday)
length(is_wday)
startDate <- dmy("2021-05-28")
endDate <- dmy("2021-06-27")
myDates <-seq(from = startDate, to = endDate, by = "days")
which(wday(myDates)==2)
is_wday
is_wday
sun_iso <- 1L
mon_fri <- 2L:6L
is_wday <- wday(myDates, label = TRUE, week_start = sunday_iso) %in% mon_fri
is_wday
sum(is_wday)
is_wday
myDates
sun_iso <- 1
mon_fri <- 2:6
is_wday <- wday(myDates, label = TRUE, week_start = sunday_iso) %in% mon_fri
sum(is_wday)
startDate <- dmy("2021-05-28")
endDate <- dmy("2021-06-27")
myDates <-seq(from = startDate, to = endDate, by = "days")
length(which(wday(myDates)==2))
startDate <- dmy("2021-05-28")
endDate <- dmy("2021-06-27")
myDates <-seq(from = startDate, to = endDate, by = "days")
startDate <- dmy("2021-05-28")
library(lubridate)
startDate <- dmy("2021-05-28")
endDate <- dmy("2021-06-27")
library(lubridate)
startDate <- dmy("2021-05-28")
is_wday(first, last)
weekdays_between <- function(first, last) {
dates <- seq(as.Date(first), as.Date(last), "days")
!weekdays(dates) %in% c("Saturday", "Sunday")
}
weekdays_between(first, last)
first <- as.Date("2021-05-28")
last <- as.Date("2021-06-27")
weekdays_between(first, last)
amount_of_days <- sum(weekdays_between(first, last))
amount_of_days
total_pay("2021-05-28", "2021-06-27")
first <- "2021-05-28"
last <- "2021-06-27"
total_pay("2021-05-28", "2021-06-27")
total_pay <- function(first, last, daily_pay) {
n_wdays <- sum(wdays_between(first, last))
n_wdays * daily_pay
}
wdays_between <- function(first, last) {
dates <- seq(as.Date(first), as.Date(last), "days")
!weekdays(dates) %in% c("Saturday", "Sunday")
}
first <- "2021-05-28"
last <- "2021-06-27"
total_pay("2021-05-28", "2021-06-27")
total_pay("2021-05-28", "2021-06-27", daily_pay = 410)
#' Title
#'
#' @param first
#' @param last
#' @param price_per_day
#'
#' @return
#' @export
#'
#' @examples
#' first <- "2021-05-28"
#' last <- "2021-06-27"
#' total_pay(first = "2021-05-28", last = "2021-06-27", daily = 410)
total_pay <- function(first, last, daily) {
n_wdays <- sum(wdays_between(first, last))
n_wdays * daily
}
wdays_between <- function(first, last) {
dates <- seq(as.Date(first), as.Date(last), "days")
!weekdays(dates) %in% c("Saturday", "Sunday")
}
use_r("pay_between")
devtools::load_all(".")
pay_between(first = "2021-05-28", last = "2021-06-27", daily = 410)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
